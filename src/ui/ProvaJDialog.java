package ui;

import dao.CircuitoDAO;
import dao.ProvaDAO;
import java.awt.Component;
import java.awt.Frame;
import java.io.IOException;
import java.sql.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import model.Prova;

/**
 *
 * @author André Schwerz
 */
public class ProvaJDialog extends javax.swing.JDialog {

    public ProvaJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            lblData.setVisible(false);
            lblGp.setVisible(false);
            loadRecords();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableProvas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtGp = new javax.swing.JTextField();
        txtData = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        BtnBuscarCircuito = new javax.swing.JButton();
        txtCircuitoNome = new javax.swing.JTextField();
        lblData = new javax.swing.JLabel();
        lblGp = new javax.swing.JLabel();
        btnFechar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PROVA");
        setBounds(new java.awt.Rectangle(0, 15, 0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JTableProvas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        JTableProvas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "GP", "Data", "Nome do Circuito"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTableProvas);
        if (JTableProvas.getColumnModel().getColumnCount() > 0) {
            JTableProvas.getColumnModel().getColumn(0).setResizable(false);
            JTableProvas.getColumnModel().getColumn(1).setResizable(false);
            JTableProvas.getColumnModel().getColumn(2).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 590, 215));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), " REGISTRO DE PROVA ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 13))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("GP:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 70, 20));

        txtGp.setEnabled(false);
        txtGp.setName("txtGp"); // NOI18N
        jPanel1.add(txtGp, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 550, -1));

        txtData.setEnabled(false);
        txtData.setName("nome"); // NOI18N
        jPanel1.add(txtData, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 130, -1));

        jLabel4.setText("Data:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 70, 20));

        jLabel5.setText("Circuito:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 70, 20));

        BtnBuscarCircuito.setText("...");
        BtnBuscarCircuito.setEnabled(false);
        BtnBuscarCircuito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarCircuitoActionPerformed(evt);
            }
        });
        jPanel1.add(BtnBuscarCircuito, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 100, 40, -1));

        txtCircuitoNome.setEditable(false);
        txtCircuitoNome.setEnabled(false);
        txtCircuitoNome.setName("nome"); // NOI18N
        jPanel1.add(txtCircuitoNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 370, -1));

        lblData.setText("jLabel2");
        jPanel1.add(lblData, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        lblGp.setText("jLabel2");
        jPanel1.add(lblGp, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 590, 180));
        jPanel1.getAccessibleContext().setAccessibleDescription("");

        btnFechar.setText("Fechar");
        btnFechar.setActionCommand("btnFechar");
        btnFechar.setPreferredSize(new java.awt.Dimension(90, 29));
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });
        getContentPane().add(btnFechar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 440, 100, 30));

        btnNovo.setText("Novo");
        btnNovo.setActionCommand("btnNovo");
        btnNovo.setPreferredSize(new java.awt.Dimension(90, 29));
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNovo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, 100, 30));

        btnSalvar.setText("Salvar");
        btnSalvar.setActionCommand("btnAlterar");
        btnSalvar.setEnabled(false);
        btnSalvar.setPreferredSize(new java.awt.Dimension(90, 29));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 440, 100, 30));

        btnRemover.setText("Remover");
        btnRemover.setActionCommand("btnRemover");
        btnRemover.setEnabled(false);
        btnRemover.setPreferredSize(new java.awt.Dimension(90, 29));
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });
        getContentPane().add(btnRemover, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 440, 100, 30));

        btnCancelar.setText("Cancelar");
        btnCancelar.setActionCommand("btnImprimir");
        btnCancelar.setEnabled(false);
        btnCancelar.setPreferredSize(new java.awt.Dimension(90, 29));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 440, 100, 30));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        addRecord = true;
        clearInputBoxes();
        txtGp.requestFocus();
        enableButtons(false, true, true, false);
        enableFields(true);
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja salvar esse registro?", "Confirmação?", JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                if (addRecord == true) {
                    addNew();
                } else {
                    updateRecord();
                }
                addRecord = false;
                loadRecords();
                enableButtons(true, false, false, false);
                enableFields(false);
            } catch (SQLException | ClassNotFoundException | IOException | ParseException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja excluir esse registro?", "Confirmação?", JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                deleteRecord();
                loadRecords();
                clearInputBoxes();
                enableButtons(true, false, false, false);
                enableFields(false);
            } catch (SQLException | ParseException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        clearInputBoxes();
        enableButtons(true, false, false, false);
        enableFields(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void BtnBuscarCircuitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarCircuitoActionPerformed
        CircuitoBuscaJDialog busca = new CircuitoBuscaJDialog((Frame) this.getParent(), true);
        busca.setVisible(true);
        txtCircuitoNome.setText(busca.circuito.getNome());
    }//GEN-LAST:event_BtnBuscarCircuitoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscarCircuito;
    private javax.swing.JTable JTableProvas;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblGp;
    private javax.swing.JTextField txtCircuitoNome;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtGp;
    // End of variables declaration//GEN-END:variables

    boolean addRecord = false;

    private void clearInputBoxes() {
        txtGp.setText("");
        txtData.setText("");
        txtCircuitoNome.setText("");
        lblData.setText("");
    }

    private void addNew() throws SQLException, ClassNotFoundException, IOException, ParseException {
        CircuitoDAO daoC = new CircuitoDAO();
        Prova p = new Prova();
        p.setGp(txtGp.getText());
        p.setDataMySQL(txtData.getText());
        p.setCircuito(daoC.find(txtCircuitoNome.getText()));
        ProvaDAO dao = new ProvaDAO();
        dao.insert(p);
    }

    private void updateRecord() throws SQLException, ClassNotFoundException, IOException, ParseException {
        CircuitoDAO daoC = new CircuitoDAO();
        Prova p = new Prova();
        p.setGp(txtGp.getText());
        System.out.println(txtData.getText());
        p.setDataMySQL(txtData.getText());
        p.setCircuito(daoC.find(txtCircuitoNome.getText()));
        ProvaDAO dao = new ProvaDAO();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        dao.update(p, lblGp.getText(), new java.sql.Date(format.parse(lblData.getText()).getTime()));
    }

    private void deleteRecord() throws SQLException, ParseException {
        ProvaDAO dao = new ProvaDAO();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        dao.remove(txtGp.getText(),  new java.sql.Date(format.parse(txtData.getText()).getTime()));
    }

    private void loadRecords() throws SQLException {
        String sql = "SELECT gp as GP, data as Data, circuito_nome AS 'Nome do Circuito'  FROM PROVA ORDER BY data;";
        ResultSetTableModel tableModel = new ResultSetTableModel(sql);
        JTableProvas.setModel(tableModel);

        //Hack to render a date value as dd/MM/yyyy 
        TableCellRenderer tableCellRenderer = new DefaultTableCellRenderer() {
            SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");

            public Component getTableCellRendererComponent(JTable table,
                    Object value, boolean isSelected, boolean hasFocus,
                    int row, int column) {
                if (value instanceof Date) {
                    value = f.format(value);
                }
                return super.getTableCellRendererComponent(table, value, isSelected,
                        hasFocus, row, column);
            }
        };
        JTableProvas.getColumnModel().getColumn(1).setCellRenderer(tableCellRenderer);

        //Hiding column "id" 
        //JTableCircuitos.removeColumn(JTableCircuitos.getColumnModel().getColumn(0));
        //Adjusting columns 
        JTableProvas.getColumnModel().getColumn(0).setMaxWidth(250);//gp
        JTableProvas.getColumnModel().getColumn(1).setMaxWidth(100);//data
        JTableProvas.getColumnModel().getColumn(2).setMaxWidth(250); //circuito_nome

        JTableProvas.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                try {
                    if (JTableProvas.getSelectedRow() >= 0) {

                        Object gp = JTableProvas.getModel().getValueAt(JTableProvas.getSelectedRow(), 0);
                        Object data = JTableProvas.getModel().getValueAt(JTableProvas.getSelectedRow(), 1);
                        Object circuito_nome = JTableProvas.getModel().getValueAt(JTableProvas.getSelectedRow(), 2);

                        txtGp.setText(gp.toString());
                        txtData.setText(data.toString());
                        txtCircuitoNome.setText(circuito_nome.toString());
  
                        lblData.setText(data.toString());
                        lblGp.setText(gp.toString());
                        
                        enableButtons(false, true, true, true);
                        enableFields(true);

                        addRecord = false;
                    }
                } catch (Exception ex) {
                    System.out.println(ex.getMessage());
                }
            }
        });

        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.LEFT);
        JTableProvas.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);
    }

    public void enableButtons(boolean novo, boolean salvar, boolean cancelar, boolean remover) {
        btnNovo.setEnabled(novo);
        btnSalvar.setEnabled(salvar);
        btnCancelar.setEnabled(cancelar);
        btnRemover.setEnabled(remover);
    }

    public void enableFields(boolean flag) {
        BtnBuscarCircuito.setEnabled(flag);
        txtCircuitoNome.setEnabled(flag);
        txtData.setEnabled(flag);
        txtGp.setEnabled(flag);
    }
}
